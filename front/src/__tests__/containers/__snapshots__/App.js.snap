// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/App/initialState 初期状態において、Componentが正しく配置されている 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    dispatch={[Function]}
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
    storeSubscription={
        Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
    }
    words={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "container",
      "children": Array [
        <Header />,
        <DescriptionPanel />,
        <InputPanel />,
        undefined,
      ],
      "componentClass": "div",
      "fluid": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": Array [
          <Header />,
          <DescriptionPanel />,
          <InputPanel />,
          undefined,
        ],
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`containers/App/showPOSAndPronunciationState 初期状態からshowSentence, showPOSAndPronunciationとStateが遷移した際に、Componentが正しく配置されている 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    dispatch={[Function]}
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
    storeSubscription={
        Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
    }
    words={
        Array [
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "やきゅう",
                },
              ],
              "word": "野球",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 2.12891303174829,
                  "pronunciation": "の",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "きの",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "ゅの",
                },
              ],
              "word": "の",
            },
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "ＤＨ",
                },
              ],
              "word": "ＤＨ",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 2.1760714835829633,
                  "pronunciation": "の",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "きの",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "ゅの",
                },
              ],
              "word": "の",
            },
            Object {
              "pos": "形状詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "せいしき",
                },
              ],
              "word": "正式",
            },
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "よびな",
                },
              ],
              "word": "呼び名",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "と",
                },
              ],
              "word": "と",
            },
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "よみ",
                },
              ],
              "word": "読み",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 1.9998295447276375,
                  "pronunciation": "を",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "みを",
                },
                Object {
                  "margin": -0.00005912806885244315,
                  "pronunciation": "くを",
                },
              ],
              "word": "を",
            },
            Object {
              "pos": "動詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "おしえ",
                },
              ],
              "word": "教え",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "て",
                },
              ],
              "word": "て",
            },
            Object {
              "pos": "動詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "くださ",
                },
              ],
              "word": "くださ",
            },
            Object {
              "pos": "語尾",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "い",
                },
              ],
              "word": "い",
            },
            Object {
              "pos": "補助記号",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "。",
                },
              ],
              "word": "。",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "container",
      "children": Array [
        <Header />,
        <DescriptionPanel />,
        <InputPanel />,
        <Connect(OutputPanel) />,
      ],
      "componentClass": "div",
      "fluid": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": Array [
          <Header />,
          <DescriptionPanel />,
          <InputPanel />,
          <Connect(OutputPanel) />,
        ],
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`containers/App/showSentenceState 初期状態からshowSentenceへStateが遷移した際に、Componentが正しく配置されている 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    dispatch={[Function]}
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
    storeSubscription={
        Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
    }
    words={
        Array [
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "やきゅう",
                },
              ],
              "word": "野球",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 2.12891303174829,
                  "pronunciation": "の",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "きの",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "ゅの",
                },
              ],
              "word": "の",
            },
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "ＤＨ",
                },
              ],
              "word": "ＤＨ",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 2.1760714835829633,
                  "pronunciation": "の",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "きの",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "ゅの",
                },
              ],
              "word": "の",
            },
            Object {
              "pos": "形状詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "せいしき",
                },
              ],
              "word": "正式",
            },
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "よびな",
                },
              ],
              "word": "呼び名",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "と",
                },
              ],
              "word": "と",
            },
            Object {
              "pos": "名詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "よみ",
                },
              ],
              "word": "読み",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 1.9998295447276375,
                  "pronunciation": "を",
                },
                Object {
                  "margin": 0,
                  "pronunciation": "みを",
                },
                Object {
                  "margin": -0.00005912806885244315,
                  "pronunciation": "くを",
                },
              ],
              "word": "を",
            },
            Object {
              "pos": "動詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "おしえ",
                },
              ],
              "word": "教え",
            },
            Object {
              "pos": "助詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "て",
                },
              ],
              "word": "て",
            },
            Object {
              "pos": "動詞",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "くださ",
                },
              ],
              "word": "くださ",
            },
            Object {
              "pos": "語尾",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "い",
                },
              ],
              "word": "い",
            },
            Object {
              "pos": "補助記号",
              "pronunciation": Array [
                Object {
                  "margin": 100,
                  "pronunciation": "。",
                },
              ],
              "word": "。",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bsClass": "container",
      "children": Array [
        <Header />,
        <DescriptionPanel />,
        <InputPanel />,
        <Connect(OutputPanel) />,
      ],
      "componentClass": "div",
      "fluid": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "container",
        "children": Array [
          <Header />,
          <DescriptionPanel />,
          <InputPanel />,
          <Connect(OutputPanel) />,
        ],
        "componentClass": "div",
        "fluid": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
